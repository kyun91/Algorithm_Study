[equals 와 == 의 차이점]

기본적으로 이 둘은 모두 양쪽에 있는 내용을 비교한 값을 
boolean type으로 반환한다는 공통점을 가진다.
하지만 차이점은 존재한다.

1)형태의 차이
가장 단순한 차이점은 형태의 차이점이다.
equals()는 메소드이다. 객체끼리 내용을 비교할 수 있도록 한다.

== 은 비교를 위한 연산자 이다.


2)주소값 비교와 내용 비교
비교할 수 있는 대상에 대한 부분

equals 메소드는 비교하고자 하는 대상의 내용 자체를 비교하지만,
== 연산자는 비교하고자 하는 대상의 주소값을 비교한다.

**Call By Value
는 기본적으로 대상에 주소값을 가지지 않는 것으로
값을 할당 받는 형태로 사용된다. 예를 들어 int, float, double 등
primitive type에 해당된다.

**Call By Reference
는 대상을 선언했을 때, 주소값이 부여된다.
그래서 어떠한 객체를 불러왔을 때는 그 주소값을 불러온다고 보면 된다.
이에는 class, Object(객체)가 해당된다.

예를 들어, String 클래스를 이용해 문자열을 생성해보자.

	String a = "aaa";
	String b = a;
	String c = new String("aaa");

a,b,c 모두 "aaa"라는 내용을 가지고 있지만 주소값에 대해서는 다른 값을 가지는
변수가 존재한다. 
위 예제에서는 a와b의 주소값은 같지만, c만 다르다.
c가 다른 주소값을 할당 받은 이유는 "aaa"라는 문자열을 대입한 것이 아니라
new String("aaa")를 통해 새로운 문자열을 선언하였기 때문이다.

따라서,

Sysout(a==c)는 false를 출력하고,
Sysout(a.eqauls(c))는 true를 출력한다.